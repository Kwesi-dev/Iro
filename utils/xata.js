// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
	{
		name: "Aquarius",
		columns: [
			{ name: "birth_place", type: "string" },
			{ name: "birth_date", type: "datetime" },
			{ name: "status", type: "string" },
			{ name: "age", type: "int" },
			{ name: "sign", type: "string" },
			{ name: "gender", type: "string" },
			{ name: "name", type: "string" },
			{ name: "description", type: "text" },
		],
	},
];
// /** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
	databaseURL:
		"https://Kwesi-Afriyie-s-workspace-3frc7o.us-east-1.xata.sh/db/Iro",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
	constructor(options) {
		super({ ...defaultOptions, ...options }, tables);
	}
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
	if (instance) return instance;
	instance = new XataClient();
	return instance;
};
